{"ast":null,"code":"import { takeEvery, put } from \"redux-saga/effects\";\nimport { getRequest } from \"../../../redux/components/Api/action\";\nimport { spaceXbase } from \"../../../services\";\nimport { spacexSuccessAction, spacexErrorAction } from \"./actions\";\nimport { actionTypes } from \"./constants\";\nexport const sampleRequestFlow = () => {\n  console.log(spaceXbase, \"spaceXbase\");\n  return getRequest(`${spaceXbase}/v4/launches/latest`, spacexSuccessAction, spacexErrorAction);\n};\nexport function* spaceFlow(action) {\n  switch (action.type) {\n    case actionTypes.SPACE_X_REQUEST:\n      yield put(sampleRequestFlow());\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction* sampleWatcher() {\n  yield takeEvery([actionTypes.SPACE_X_REQUEST], spaceFlow);\n}\n\nexport default sampleWatcher;","map":{"version":3,"sources":["/Users/Thang.DoX/Desktop/nextjs-ts-antd-saga/src/screens/Sample/redux/saga.ts"],"names":["takeEvery","put","getRequest","spaceXbase","spacexSuccessAction","spacexErrorAction","actionTypes","sampleRequestFlow","console","log","spaceFlow","action","type","SPACE_X_REQUEST","sampleWatcher"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;AACA,SAASC,UAAT;AAEA,SAASC,UAAT;AACA,SAASC,mBAAT,EAA8BC,iBAA9B;AAEA,SAASC,WAAT;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ,EAAwB,YAAxB;AAEA,SAAOD,UAAU,CACd,GAAEC,UAAW,qBADC,EAEfC,mBAFe,EAGfC,iBAHe,CAAjB;AAKD,CARM;AAUP,OAAO,UAAUK,SAAV,CAAoBC,MAApB,EAA+C;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,eAAjB;AACE,YAAMZ,GAAG,CAACM,iBAAiB,EAAlB,CAAT;AACA;;AAEF;AACE;AANJ;AAQD;;AAED,UAAUO,aAAV,GAAqC;AACnC,QAAMd,SAAS,CAAC,CAACM,WAAW,CAACO,eAAb,CAAD,EAAgCH,SAAhC,CAAf;AACD;;AAED,eAAeI,aAAf","sourcesContent":["import { takeEvery, put } from \"redux-saga/effects\";\nimport { getRequest } from \"@redux/components/Api/action\";\n\nimport { spaceXbase } from \"@services\";\nimport { spacexSuccessAction, spacexErrorAction } from \"./actions\";\nimport { Action } from \"../types\";\nimport { actionTypes } from \"./constants\";\n\nexport const sampleRequestFlow = () => {\n  console.log(spaceXbase, \"spaceXbase\");\n\n  return getRequest(\n    `${spaceXbase}/v4/launches/latest`,\n    spacexSuccessAction,\n    spacexErrorAction\n  );\n};\n\nexport function* spaceFlow(action: Action): Generator {\n  switch (action.type) {\n    case actionTypes.SPACE_X_REQUEST:\n      yield put(sampleRequestFlow());\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction* sampleWatcher(): Generator {\n  yield takeEvery([actionTypes.SPACE_X_REQUEST], spaceFlow);\n}\n\nexport default sampleWatcher;\n"]},"metadata":{},"sourceType":"module"}