{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Thang.DoX/Desktop/nextjs-ts-antd-saga/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(sampleFlow),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(sampleWatcher);\n\nimport \"redux-saga/effects\";\nimport { actionTypes } from \"./constants\";\nexport function sampleFlow(action) {\n  return _regeneratorRuntime.wrap(function sampleFlow$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = action.type;\n          _context.next = _context.t0 === actionTypes.SAMPLE ? 3 : 6;\n          break;\n\n        case 3:\n          _context.next = 5;\n          return call(changeSampleFlow, action);\n\n        case 5:\n          return _context.abrupt(\"break\", 7);\n\n        case 6:\n          return _context.abrupt(\"break\", 7);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sampleWatcher() {\n  return _regeneratorRuntime.wrap(function sampleWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(actionTypes.GET_INFO, sampleFlow);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default sampleWatcher;","map":{"version":3,"sources":["/Users/Thang.DoX/Desktop/nextjs-ts-antd-saga/src/screens/Login/redux/saga.ts"],"names":["sampleFlow","sampleWatcher","actionTypes","action","type","SAMPLE","call","changeSampleFlow","takeLatest","GET_INFO"],"mappings":";;oDAMiBA,U;qDAWPC,a;;AAjBV,OAAgB,oBAAhB;AAGA,SAASC,WAAT;AAGA,OAAO,SAAUF,UAAV,CAAqBG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,wBACGA,MAAM,CAACC,IADV;AAAA,0CAEEF,WAAW,CAACG,MAFd;AAAA;;AAAA;AAAA;AAGD,iBAAMC,IAAI,CAACC,gBAAD,EAAmBJ,MAAnB,CAAV;;AAHC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWP,SAAUF,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACN,WAAW,CAACO,QAAb,EAAuBT,UAAvB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,aAAf","sourcesContent":["import { } from \"redux-saga/effects\";\n\nimport { Action } from \"../types\";\nimport { actionTypes } from \"./constants\";\n\n\nexport function* sampleFlow(action: Action): Generator {\n  switch (action.type) {\n    case actionTypes.SAMPLE:\n      yield call(changeSampleFlow, action);\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction* sampleWatcher(): Generator {\n  yield takeLatest(actionTypes.GET_INFO, sampleFlow);\n}\n\nexport default sampleWatcher;\n"]},"metadata":{},"sourceType":"module"}